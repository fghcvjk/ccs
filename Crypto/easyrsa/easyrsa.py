from Crypto.Util.number import getPrime
import libnum

flag = open("flag", "rb").read()
m = libnum.s2n(flag)

p = getPrime(1024)
q = getPrime(1024)
e = getPrime(16)

assert(e < 100000)
assert((p-1)*(q-1) % e != 0)

n = p*q
c = pow(m, e, n)
print(n)
print(c)
print(pow(203, e, n))

n1 = 14447643252565777715864027833246970457644149205377077114557844194475351427602891434717210425761489397720768080804057681716878329775755736867275787090842342972747341989307768894823500496996775613553387006129396991308248383534027124304458858418272142277374195546642817466972257010498548703719857037562126864875309726037978176322675043436578560167240153963108730741
n2 = 14065305138241653019388796033620985654344872570254349628087800523983030095068530755725116979263314303250478127056342308461281099856158859645844038934106881739232524756021030652006569887095508481889526525415268231172343427513042160771430081607295983468540271672389951882100887649557428947588071682994165813844808959646535650068447724168824415128560373107657807327
n3 = 14010873209740800300684312375935492061920876881342349004610469290657051121488882809366891041879534163378791500190062839533527507469631225716976954903025528349856859843788182713777319610094774588945463215323571510783491373934016807174204289914087857971209627878790468079321441437412922836789644662742241393729814010578667933096115511831275664646781666371100775831

print(pow(p, 3, n1))
print(pow(p, 3, n2))
print(pow(p, 3, n3))
